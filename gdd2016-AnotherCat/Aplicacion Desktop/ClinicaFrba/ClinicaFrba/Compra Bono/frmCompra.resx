<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /B9GnguTJ1fQywAAAABJRU5ErkJggg==
</value>
  </data>
</root>